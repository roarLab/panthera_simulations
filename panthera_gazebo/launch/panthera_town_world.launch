<launch>
  <arg name="model" default="$(find panthera_description)/urdf/panthera.urdf"/>
  <arg name="x_pos" default="-37"/>
  <arg name="y_pos" default="5.6"/>
  <arg name="z_pos" default="0.33"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find panthera_gazebo)/worlds/town.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- <rosparam file="$(find panthera_gazebo)/config/controller.yaml" command="load"/> -->

  <!-- load the controllers -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="joint_state_controller four_wheel_steering_controller"/> -->

  <!-- convert joint states to TF transforms for rviz -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/joint_states" />
  </node>

  <!-- load urdf into robot_description parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />

  <!-- spawn panthera model in gazebo -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model panthera -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
</launch>